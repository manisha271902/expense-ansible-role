- name: disable default nodejs
  ansible.builtin.command:
    dnf module disable nodejs -y
- name: enable default nodejs
  ansible.builtin.command:
    dnf module enable nodejs:20 -y
- name: install nodejs
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: latest
  loop:
  - nodejs
  - mysql
- name: create user
  ansible.builtin.user:
    name: expense
- name: run app pre-requisites
  tags:
  - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req
# - name: create a directory
#   ansible.builtin.file:   
#     path: /app
#     state: directory
# - name: Download code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip
# - name: unzip backend code
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip # by default checks in ansible server
#     dest: /app
#     remote_src: yes
- name: install npm dependancies
  ansible.builtin.command:
    npm install
  args:         #paina command run chese mundhi ee directory ki change avvu ani ansible ki chepthunam manam. And pakage.json ekada untado akade npm install run aytadi
    chdir: /app

  #local nundi remote server lo ee loc lo copy chestaid
# - name: copy backend service
#   ansible.builtin.copy:
#     src: backend.service
#     dest: /etc/systemd/system/backend.service


- name: copy backend service
  ansible.builtin.template:
    src: templates/backend.service.j2
    dest: /etc/systemd/system/backend.service
- name: install python mysql dependencies
  ansible.builtin.pip:
    name:
    - PyMySQL    #to connect mysql db from ansible
    - cryptography
    executable: pip3.9 # pip3.11 if python version is 3.11
- name: Establish connection  and import mysql data
  community.mysql.mysql_db:
    name: all #name=all may only be provided if state is dump or import.
    login_user: "{{ login_user }}"
    login_password: "{{login_password}}"
    login_host: "{{login_host}}"   
#paina varak connection establish aytadi, now dump/import data
    target: /app/schema/backend.sql
    state: import

- name: deamon reload.
  ansible.builtin.systemd_service:
    daemon_reload: true
- name: start and enable.
  ansible.builtin.service:
    name: backend
    state: started
    enabled: true
